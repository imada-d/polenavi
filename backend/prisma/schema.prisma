// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}

// ========================================
// Phase 1: MVP に必要な最小限のテーブル
// ========================================

// 柱の種類マスタ（電柱、照明柱など）
model PoleType {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)
  parentId  Int?      @map("parent_id")
  parent    PoleType? @relation("PoleTypeHierarchy", fields: [parentId], references: [id])
  children  PoleType[] @relation("PoleTypeHierarchy")
  icon      String?   @db.VarChar(10)
  sortOrder Int?      @map("sort_order")
  createdAt DateTime  @default(now()) @map("created_at")
  
  poles     Pole[]

  @@map("pole_types")
}

// 事業者マスタ（九州電力、NTTなど）
model PoleOperator {
  id            Int      @id @default(autoincrement())
  name          String   @unique @db.VarChar(50)
  nameShort     String?  @map("name_short") @db.VarChar(20)
  category      String   @db.VarChar(20) // power, telecom, other
  areaCoverage  String?  @map("area_coverage") @db.VarChar(50)
  numberFormat  String?  @map("number_format") @db.VarChar(100)
  exampleNumber String?  @map("example_number") @db.VarChar(50)
  isActive      Boolean  @default(true) @map("is_active")
  sortOrder     Int?     @map("sort_order")
  createdAt     DateTime @default(now()) @map("created_at")
  
  poleNumbers   PoleNumber[]

  @@map("pole_operators")
}

// 都道府県マスタ
model Prefecture {
  id                  Int      @id @default(autoincrement())
  name                String   @db.VarChar(10)
  region              String?  @db.VarChar(20)
  primaryPowerCompany String?  @map("primary_power_company") @db.VarChar(50)
  boundaryArea        Boolean  @default(false) @map("boundary_area")
  createdAt           DateTime @default(now()) @map("created_at")

  @@map("prefectures")
}

// 電柱マスタ（物理的な柱）
model Pole {
  id              Int       @id @default(autoincrement())
  latitude        Decimal   @db.Decimal(10, 8)
  longitude       Decimal   @db.Decimal(11, 8)
  // location は PostGIS の GEOGRAPHY型 - 後でRaw SQLで対応
  prefecture      String?   @db.VarChar(10)
  poleTypeId      Int?      @map("pole_type_id")
  poleType        PoleType? @relation(fields: [poleTypeId], references: [id])
  poleTypeName    String?   @map("pole_type_name") @db.VarChar(50)
  primaryPhotoUrl String?   @map("primary_photo_url") @db.VarChar(500)
  photoCount      Int       @default(0) @map("photo_count")
  numberCount     Int       @default(0) @map("number_count")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  
  poleNumbers     PoleNumber[]
  photos          PolePhoto[]

  @@map("poles")
}

// 電柱番号テーブル（番号札）
model PoleNumber {
  id                 Int           @id @default(autoincrement())
  poleId             Int           @map("pole_id")
  pole               Pole          @relation(fields: [poleId], references: [id])
  poleNumber         String        @unique @map("pole_number") @db.VarChar(100)
  operatorId         Int?          @map("operator_id")
  operator           PoleOperator? @relation(fields: [operatorId], references: [id])
  operatorName       String        @map("operator_name") @db.VarChar(50)
  areaPrefix         String?       @map("area_prefix") @db.VarChar(50)
  photoUrl           String?       @map("photo_url") @db.VarChar(500)
  registeredBy       Int?          @map("registered_by")
  user               User?         @relation(fields: [registeredBy], references: [id])
  registeredByName   String?       @map("registered_by_name") @db.VarChar(100)
  locationMethod     String        @default("auto") @map("location_method") @db.VarChar(20) // auto, manual, verified
  locationAccuracy   Decimal?      @map("location_accuracy") @db.Decimal(6, 2)
  pointsEarned       Int?          @map("points_earned")
  verificationCount  Int           @default(0) @map("verification_count")
  verificationStatus String        @default("unverified") @map("verification_status") @db.VarChar(20)
  firstVerifiedAt    DateTime?     @map("first_verified_at")
  lastVerifiedAt     DateTime?     @map("last_verified_at")
  isAutoGenerated    Boolean       @default(false) @map("is_auto_generated")
  gpsAdjusted        Boolean       @default(false) @map("gps_adjusted")
  adjustmentDistance Decimal?      @map("adjustment_distance") @db.Decimal(6, 2)
  originalGpsLat     Decimal?      @map("original_gps_lat") @db.Decimal(10, 8)
  originalGpsLng     Decimal?      @map("original_gps_lng") @db.Decimal(11, 8)
  createdAt          DateTime      @default(now()) @map("created_at")
  
  photos             PolePhoto[]

  @@index([poleId])
  @@index([poleNumber])
  @@index([operatorName])
  @@map("pole_numbers")
}

// 写真テーブル
model PolePhoto {
  id                  Int         @id @default(autoincrement())
  poleId              Int?        @map("pole_id")
  pole                Pole?       @relation(fields: [poleId], references: [id])
  poleNumberId        Int?        @map("pole_number_id")
  poleNumber          PoleNumber? @relation(fields: [poleNumberId], references: [id])
  photoUrl            String      @map("photo_url") @db.VarChar(500)
  photoThumbnailUrl   String      @map("photo_thumbnail_url") @db.VarChar(500)
  photoType           String      @map("photo_type") @db.VarChar(20) // plate, full, detail
  isPrimary           Boolean     @default(false) @map("is_primary")
  likeCount           Int         @default(0) @map("like_count")
  officialLikeCount   Int         @default(0) @map("official_like_count")
  isHallOfFame        Boolean     @default(false) @map("is_hall_of_fame")
  pointsActiveUntil   DateTime?   @map("points_active_until")
  isHidden            Boolean     @default(false) @map("is_hidden")
  hiddenReason        String?     @map("hidden_reason") @db.VarChar(100)
  deletedAt           DateTime?   @map("deleted_at")
  deletedBy           Int?        @map("deleted_by")
  deletedByUser       User?       @relation("PhotoDeletedBy", fields: [deletedBy], references: [id])
  deletedReason       String?     @map("deleted_reason") @db.VarChar(100)
  autoDeleted         Boolean     @default(false) @map("auto_deleted")
  deletionExpiresAt   DateTime?   @map("deletion_expires_at")
  uploadedBy          Int?        @map("uploaded_by")
  uploadedByUser      User?       @relation("PhotoUploadedBy", fields: [uploadedBy], references: [id])
  uploadedByName      String?     @map("uploaded_by_name") @db.VarChar(100)
  createdAt           DateTime    @default(now()) @map("created_at")

  @@index([poleId])
  @@index([photoType])
  @@index([deletedAt])
  @@map("pole_photos")
}

// ユーザーテーブル
model User {
  id                 Int      @id @default(autoincrement())
  email              String   @unique @db.VarChar(255)
  passwordHash       String   @map("password_hash") @db.VarChar(255)
  username           String   @unique @db.VarChar(100)
  displayName        String?  @map("display_name") @db.VarChar(100)
  emailVerified      Boolean  @default(false) @map("email_verified")
  giftCardEmail      String?  @map("gift_card_email") @db.VarChar(255)
  homePrefecture     String?  @map("home_prefecture") @db.VarChar(10)
  homePrefectureId   Int?     @map("home_prefecture_id")
  planType           String   @default("free") @map("plan_type") @db.VarChar(20)
  stripeCustomerId   String?  @map("stripe_customer_id") @db.VarChar(100)
  subscriptionStatus String?  @map("subscription_status") @db.VarChar(20)
  role               String   @default("user") @db.VarChar(20) // user, moderator, admin
  isActive           Boolean  @default(true) @map("is_active")
  createdAt          DateTime @default(now()) @map("created_at")
  
  poleNumbers        PoleNumber[]
  uploadedPhotos     PolePhoto[]  @relation("PhotoUploadedBy")
  deletedPhotos      PolePhoto[]  @relation("PhotoDeletedBy")

  @@map("users")
}

// 匿名ユーザー
model GuestUser {
  id             Int      @id @default(autoincrement())
  guestId        String   @unique @map("guest_id") @db.VarChar(20)
  homePrefecture String?  @map("home_prefecture") @db.VarChar(10)
  createdAt      DateTime @default(now()) @map("created_at")

  @@map("guest_users")
}